package dk.itu.mario.level;

import java.util.ArrayList;
import java.util.List;

public class GeneticAlgorithm<T> extends OptimizationAlgorithm {

	private GeneticAlgorithmProblem<T> gap;
	
	private int populationSize;
	private int populationToMate;
	private int populationToMutate;
	
	private List<Individual<T>> population;
	
	public GeneticAlgorithm(int size, double replacementRate, double mutationRate, OptimizationProblem<T> optimizationProblem) {
		gap	= (GeneticAlgorithmProblem<T>) optimizationProblem;
		populationSize		= size;
		populationToMate 	= (int) Math.round(replacementRate * populationSize);
		populationToMutate	= (int) Math.round(mutationRate * populationSize);
		
		population = new ArrayList<Individual<T>>();
		for(int i = 0; i < populationSize; i++) {
			population.add(gap.createRandom());
		}
	}

	public Individual<T> getOptimal() {
		 
		double bestFitness	= Double.MIN_VALUE;
		Individual<T> best	= null;
		
		for(Individual<T> individual : population) {
			double fitness = gap.value(individual);
			if(fitness > bestFitness){
				best = individual;
				bestFitness = fitness;
			}
		}
		return null;
	}

}
