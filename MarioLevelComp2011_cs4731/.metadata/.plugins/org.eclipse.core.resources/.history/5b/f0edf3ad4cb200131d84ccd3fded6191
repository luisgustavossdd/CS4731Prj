package optimization;

import java.util.List;

import dk.itu.mario.level.MyLevel;


public class GeneticAlgorithmProblem<T> implements OptimizationProblem<T> {

	CrossoverFunction<T>	crossoverFn;
	MutationFunction<T>		mutationFn;
	EvaluationFunction<T>	evalFn;
	
	public GeneticAlgorithmProblem(EvaluationFunction<T> evalFn, MutationFunction<T> mutationFn, CrossoverFunction<T> crossoverFn) {
		this.evalFn			= evalFn;
		this.crossoverFn 	= crossoverFn;
		this.mutationFn		= mutationFn;
	}

	@Override
	public Individual<T> createRandom() {
		return (Individual<T>) new MyLevel(320,a15);
	}

	public double value(Individual<T> individual) {
		return evalFn.value(individual);
	}
	
	public List<Individual<T>> mate(List<Individual<T>> parents) {
		return crossoverFn.mate(parents.get(0),parents.get(1));
	}

	public Individual<T> mutate(Individual<T> individual) {
		return mutationFn.mutate(individual);
	}
}
