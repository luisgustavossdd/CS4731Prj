package dk.itu.mario.level;

import java.util.ArrayList;

public class LevelGenerator {
	public static final int	MAX_WEIGHT = 100;
	
	public static boolean initialized = false;
	
	public static	EvaluationFunction		evalFn;
	public static	OptimizationProblem		optimizationProblem;
	public static 	OptimizationAlgorithm	optimizationAlgorithm;
	
	static void init(){
		if(initialized) return;
		
		int[]		copies 	= new int[10];
		double[]	profits	= new double[10],
					weights = new double[10];
		
		int		population		= 200;
		double	replacementRate	= 0.60, 
				mutationRate	= 0.20;
		
		evalFn 					= new KnapsackEvaluationFunction(copies,profits,weights,MAX_WEIGHT);
		optimizationProblem		= new GeneticAlgorithmProblem(evalFn,LevelMutations.getMutationFunctions(),LevelCrossovers.getCrossoversFunction());
		optimizationAlgorithm	= new GeneticAlgorithm(population, replacementRate, mutationRate, optimizationProblem);
	
		initialized = true;
	}
	
	public static Level create(int style, int difficulty) {
		if(!initialized) init();
		
		Trainer.train(optimizationAlgorithm);
		Individual result = optimizationAlgorithm.getOptimal();
		return result;
	}
}
